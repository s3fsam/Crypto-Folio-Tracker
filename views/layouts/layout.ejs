<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %></title>
  <link rel="stylesheet" href="/css/styles.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="/js/main.js" defer></script>
</head>
<body>
  <header>
    <h1>Crypto Portfolio Tracker</h1>
  </header>

  <nav>
    <ul class="tabs">
      <li class="tab-link current" data-tab="tab-1">Prices</li>
      <li class="tab-link" data-tab="tab-2">Portfolio</li>
      <li class="tab-link" data-tab="tab-3">Tab 3</li>
      <li class="tab-link" data-tab="tab-4">Tab 4</li>
      <li class="tab-link" data-tab="tab-5">Tab 5</li>
    </ul>
  </nav>

  <main>
    <!-- Onglet 1 : Prix -->
    <div id="tab-1" class="tab-content current">
      <h2>Cryptocurrency Prices</h2>
      <p>Bitcoin Price: $<%= bitcoinPrice %></p>
      <p>Ethereum Price: $<%= ethereumPrice %></p>

      <h3>Select a Cryptocurrency</h3>
      <select id="crypto-dropdown">
        <% cryptos.forEach(function(crypto) { %>
          <option value="<%= crypto.id %>"><%= crypto.name %></option>
        <% }); %>
      </select>
      <button id="refresh-cryptocurrencies-btn">Refresh Cryptocurrencies</button>

      <canvas id="crypto-chart" width="400" height="200"></canvas>
    </div>

    <!-- Onglet 2 : Portfolio -->
    <div id="tab-2" class="tab-content">
      <h2>Ajouter une adresse crypto</h2>
      <form id="crypto-form">
        <label for="crypto">Crypto:</label>
        <input type="text" id="crypto" name="crypto" required>

        <label for="address">Adresse:</label>
        <input type="text" id="address" name="address" required>

        <label for="delimiterStart">D√©limiteur D√©but:</label>
        <input type="text" id="delimiterStart" name="delimiterStart">

        <label for="delimiterEnd">D√©limiteur Fin:</label>
        <input type="text" id="delimiterEnd" name="delimiterEnd">

        <button type="submit">Ajouter</button>
      </form>

      <h3>Mes portefeuilles</h3>
      <table id="wallets-table" class="wallets-table">
        <thead>
          <tr>
            <th>Cryptomonnaie</th>
            <th>Adresse</th>
            <th>Solde</th>
            <th>Valeur (USD)</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody id="wallets-list">
          <!-- Remplissage dynamique -->
        </tbody>
        <tfoot>
          <tr>
            <td colspan="4" style="text-align:right;"><strong>Total :</strong></td>
            <td><strong id="current-balance">-</strong></td>
          </tr>
        </tfoot>
      </table>

      <div id="portfolio-balances"></div>
    </div>

    <!-- Onglets 3 √† 5 -->
    <div id="tab-3" class="tab-content">
      <h2>Tab 3 Content</h2>
    </div>
    <div id="tab-4" class="tab-content">
      <h2>Tab 4 Content</h2>
    </div>
    <div id="tab-5" class="tab-content">
      <h2>Tab 5 Content</h2>
    </div>
  </main>

  <script>
    // Ajouter une nouvelle adresse portefeuille
    document.getElementById('crypto-form').addEventListener('submit', async (e) => {
      e.preventDefault();

      const crypto = document.getElementById('crypto').value.trim();
      const address = document.getElementById('address').value.trim();
      const delimiterStart = document.getElementById('delimiterStart').value.trim();
      const delimiterEnd = document.getElementById('delimiterEnd').value.trim();

      if (!crypto || !address || !delimiterStart || !delimiterEnd) {
        alert("Veuillez remplir tous les champs !");
        return;
      }

      try {
        const response = await fetch('/add-crypto-address', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ crypto, address, delimiterStart, delimiterEnd })
        });

        const result = await response.json();
if (result.error) {
  document.getElementById('portfolio-balances').innerHTML += `<p style="color: red;">Erreur : ${result.error}</p>`;
  return;
}

alert("‚úÖ Adresse ajout√©e !");
await loadWallets(); // Recharge proprement sans ajouter manuellement

      } catch (error) {
        console.error('‚ùå Erreur:', error);
        alert("Une erreur est survenue. Veuillez r√©essayer.");
      }
    });

    // Charger les portefeuilles
    async function loadWallets() {
      const walletsList = document.getElementById('wallets-list');
      const totalBalanceEl = document.getElementById('current-balance');
      walletsList.innerHTML = '';
      let total = 0;

      const res = await fetch('/wallets');
      const wallets = await res.json();

      wallets.forEach(wallet => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${wallet.crypto}</td>
          <td>${wallet.address}</td>
          <td>${wallet.balance}</td>
          <td>${wallet.usdValue || 0}</td>
          <td>
            <button onclick="refreshWallet('${wallet.address}')">üîÑ</button>
            <button onclick="deleteWallet('${wallet._id}')">üóëÔ∏è</button>
          </td>
        `;
        total += wallet.usdValue || 0;
        walletsList.appendChild(row);
      });

      totalBalanceEl.textContent = total.toFixed(2);
    }

    async function refreshWallet(address) {
      const res = await fetch('/refresh-wallet-balance', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ address })
      });
      if (res.ok) {
        alert("‚úÖ Solde mis √† jour !");
        loadWallets();
      } else {
        alert("‚ùå Erreur lors du rafra√Æchissement !");
      }
    }

    async function deleteWallet(id) {
      if (!confirm("Supprimer ce portefeuille ?")) return;

      const res = await fetch(`/wallets/${id}`, { method: 'DELETE' });
      if (res.ok) {
        alert("üóëÔ∏è Supprim√© !");
        loadWallets();
      } else {
        alert("‚ùå Erreur lors de la suppression !");
      }
    }
  </script>

  <script src="/js/tabs.js"></script>
</body>
</html>
